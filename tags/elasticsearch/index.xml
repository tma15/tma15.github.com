<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>elasticsearch on Now is better than never.</title>
    <link>http://tma15.github.io/tags/elasticsearch/</link>
    <description>Recent content in elasticsearch on Now is better than never.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Nov 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://tma15.github.io/tags/elasticsearch/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PythonでElasticsearchを使うときのメモ</title>
      <link>http://tma15.github.io/blog/2014/11/use-es-py/</link>
      <pubDate>Sat, 08 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tma15.github.io/blog/2014/11/use-es-py/</guid>
      <description>全文検索したくなったときのためのメモ。 Elasticsearchはインストール済みとして進める。
$./bin/elasticsearch -v Version: 1.4.0, Build: bc94bd8/2014-11-05T14:26:12Z, JVM: 1.8.0_25 準備 日本語を扱いたいことが想定されるので、 elasticsearch-analysis-kuromoji をインストール。プロキシ環境の場合は、プロキシを指定するか、手動でインストールする必要がある。
 プロキシ環境でのpluginコマンドの実行 Manual install of Elasticsearch plugins  $bin/plugin -install elasticsearch/elasticsearch-analysis-kuromoji/2.4.1 デフォルトのanalyzerをkuromojiにしておく。
$tail config/elasticsearch.yml ... index.analysis.analyzer.default.type: custom index.analysis.analyzer.default.tokenizer: kuromoji_tokenizer インストール では、まずはPythonラッパーをインストール。 使い方はPython Elasticsearch Clientが参考になりそう。
pip install elasticsearch ここ以降はElasticsearchチュートリアルを参考にさせていただいた。データもそれに合わせてlivedoor/datasetsを使用させていただいている。
ドキュメントを登録していく mapping.yamlにスキーマを定義しておく。ここでは簡単のためにpropertiesの数はほんの少しにしている。
$cat mapping.yaml mappings: restaurant: properties: description: type: string name: type: string name_kana: type: string adress: type: string indexを生成して文書を順に追加していくスクリプトを書く。
import sys from elasticsearch import Elasticsearch es = Elasticsearch() index = &amp;#34;ldgroumet&amp;#34; doc_type = &amp;#34;restaurant&amp;#34; i = 1 setting = yaml.</description>
    </item>
    
  </channel>
</rss>